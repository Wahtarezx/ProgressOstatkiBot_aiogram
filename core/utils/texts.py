import re
from datetime import datetime, timedelta
from typing import Tuple, List

from aiogram.utils.formatting import as_line, Bold, Underline, Text
from funcy import str_join

from core.services.markirovka.inventory.models import Inventory, InventoryExcel
from core.services.markirovka.ofdplatforma import get_pg_info
from core.utils.CS.pd_onlinecheck import Degustation
from core.utils.foreman.pd_model import ForemanCash


def phone(client_phone):
    client_phone = str_join(sep="", seq=re.findall(r"[0-9]*", client_phone))
    if re.findall(r"^89", client_phone):
        return re.sub(r"^89", "79", client_phone)
    return client_phone


def ostatki_date(date):
    return f"–û—Å—Ç–∞—Ç–∫–∏ <b><u>{date}</u></b>\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ —Å–≤–µ–∂–∏–µ –æ—Å—Ç–∞—Ç–∫–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞–º –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É"


def accept_text(boxs) -> list[str]:
    result = []
    text = "‚ûñ‚ûñ‚ûñ<b><u>–ü–æ–∑–∏—Ü–∏–∏ –¥–ª—è –ø—Ä–∏—ë–º–∞</u></b>‚ûñ‚ûñ‚ûñ\n"
    text += "–ù–∞–∑–≤–∞–Ω–∏–µ | –û–±—å–µ–º | –ö–æ–ª-–≤–æ –±—É—Ç—ã–ª–æ–∫\n"
    text += "‚ûñ" * 15 + "\n"
    count = 0
    for box in boxs:
        if not box.scaned:
            text += f"{box.name} | {box.capacity[:4]}–ª | {box.count_bottles}—à—Ç\n"
        else:
            text += (
                f"<s>{box.name} | {box.capacity[:4]}–ª | {box.count_bottles}—à—Ç</s>‚úÖ\n"
            )
            count += 1
        if len(text) > 3800:
            result.append(text)
            text = ""
    text += "‚ûñ" * 15 + "\n"
    text += f"–ü—Ä–∏–Ω—è—Ç–æ <b><u>{count}</u></b> –∏–∑ <b><u>{len(boxs)}</u></b> –ø–æ–∑–∏—Ü–∏–π"
    result.append(text)
    return result


def divirgence_text(boxs):
    text = "<b><u>–ù–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∫–æ—Ä–æ–±–∫–∏ –Ω–µ –±—É–¥—É—Ç –ø–æ—Ç–¥–≤–µ—Ä–∂–¥–µ–Ω—ã</u></b>\n"
    text += "–ù–∞–∑–≤–∞–Ω–∏–µ | –û–±—å–µ–º | –ö–æ–ª-–≤–æ –±—É—Ç—ã–ª–æ–∫ | –ù–æ–º–µ—Ä –∫–æ—Ä–æ–±–∫–∏\n"
    text += "‚ûñ" * 15 + "\n"
    for box in boxs:
        if not box.scaned:
            text += f"{box.name} | {box.capacity[:4]}–ª | {box.count_bottles}—à—Ç | {box.boxnumber}\n"
    text += "‚ûñ" * 15 + "\n"
    return text


def beer_accept_text(bottles):
    text = "‚ûñ‚ûñ‚ûñ<b><u>–ë—É—Ç—ã–ª–∫–∏ –¥–ª—è –ø—Ä–∏—ë–º–∞</u></b>‚ûñ‚ûñ‚ûñ\n"
    text += "–ù–∞–∑–≤–∞–Ω–∏–µ | –ö–æ–ª-–≤–æ –±—É—Ç—ã–ª–æ–∫\n"
    text += "‚ûñ" * 15 + "\n"
    for bottle in bottles:
        text += f"{bottle.name} | {bottle.quantity}—à—Ç\n"
    return text


def scanning_inventory(bottles):
    text = "‚ûñ‚ûñ‚ûñ<b><u>–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è</u></b>‚ûñ‚ûñ‚ûñ\n"
    text += f"–û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –±—É—Ç—ã–ª–æ–∫: <b><u>{len(bottles)}</u></b>\n"
    return text


def detailed_inventory(detailed_bottles):
    text = "‚ûñ‚ûñ‚ûñ<b><u>–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è</u></b>‚ûñ‚ûñ‚ûñ\n"
    text += "–ù–∞–∑–≤–∞–Ω–∏–µ | –ö–æ–ª-–≤–æ –±—É—Ç—ã–ª–æ–∫\n"
    text += "‚ûñ" * 15 + "\n"
    total = 0
    for bottle in detailed_bottles:
        text += f"{bottle.name} | <b><u>{bottle.count} —à—Ç</u></b>\n"
        text += "‚ûñ" * 10 + "\n"
        total += bottle.count
    text += f"–í—Å–µ–≥–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: <b><u>{total} —à—Ç</u></b>\n"
    print(len(text))
    return text


async def error_message_wp(cash: ForemanCash, error: str):
    return (
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n"
        f"–≠—Ç–æ –∫–æ–º–ø—å—é—Ç–µ—Ä: {cash.shopcode}-{cash.cashcode}\n"
        f"–£ –º–µ–Ω—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ –≤—ã—à–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –æ—à–∏–±–∫–∏, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.\n\n"
        f"{error}"
    )


error_head = f"‚ûñ‚ûñ‚ûñ‚ûñüö®–û–®–ò–ë–ö–êüö®‚ûñ‚ûñ‚ûñ‚ûñ\n"
intersum_head = f"‚ûñ‚ûñ‚ûñ‚ûñ‚ùóÔ∏è–í–ê–ñ–ù–û‚ùóÔ∏è‚ûñ‚ûñ‚ûñ‚ûñ\n"
information_head = f"‚ûñ‚ûñ‚ûñ‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚ÑπÔ∏è‚ûñ‚ûñ‚ûñ\n"
auth_head = f"‚ûñ‚ûñ‚ûñüîë–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—èüîë‚ûñ‚ûñ‚ûñ\n"
success_head = "‚ûñ‚ûñ‚ûñ‚úÖ–£–°–ü–ï–®–ù–û‚úÖ‚ûñ‚ûñ‚ûñ\n"

develop = "–î–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
error_cashNumber = (
    error_head
    + f"–ù—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: <b><u>902</u></b>\n<b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞</b>"
)
error_cashNotOnline = f"–ö–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –≤ —Å–µ—Ç–∏. –í–æ–∑–º–æ–∂–Ω–æ –æ–Ω –≤—ã–∫–ª—é—á–µ–Ω, –∏–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞."
error_fake_client_phone = error_head + f"–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —á—É–∂–æ–π —Å–æ—Ç–æ–≤—ã–π"
error_duplicateCash = (
    error_head
    + "–° –¥–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π –∫–∞—Å—Å—ã\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö –ø–æ–¥–¥—Ä–µ–∂–∫—É."
)
error_cash_not_found = (
    error_head + "–î–∞–Ω–Ω–∞—è –∫–∞—Å—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö –ø–æ–¥–¥—Ä–µ–∂–∫—É."
)
error_price_not_decimal = "{error_head}–¶–µ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ –Ω—É–∂–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞\n–ü—Ä–∏–º–µ—Ä –∫–∞–∫ –Ω–∞–¥–æ: <u><b>10.12</b></u>".format(
    error_head=error_head
)
menu = (
    f"<u><b>–û—Å—Ç–∞—Ç–∫–∏</b></u> - –ü–æ–ª—É—á–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞\n"
    f"<u><b>–ù–∞–∫–ª–∞–¥–Ω—ã–µ</b></u> - –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –Ω–∞–∫–ª–∞–¥–Ω—ã–º–∏\n"
    f"<u><b>–¢–æ–≤–∞—Ä—ã</b></u> - –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ç–æ–≤–∞—Ä–∞–º–∏\n"
    f"<u><b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è</b></u> - –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤\n",
    f"<u><b>–ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫</b></u> - –û–ø–µ—Ä–∞–≤—Ü–∏–∏ —Å –ß–µ—Å—Ç–Ω—ã–º –∑–Ω–∞–∫–æ–º\n",
    f"<u><b>–ü—Ä–æ–¥–∞–∂–∏</b></u> - –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º\n",
)
menu_test = (
    f"<u><b>–û—Å—Ç–∞—Ç–∫–∏</b></u> - –ü–æ–ª—É—á–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞\n"
    f"<u><b>–ù–∞–∫–ª–∞–¥–Ω—ã–µ</b></u> - –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –Ω–∞–∫–ª–∞–¥–Ω—ã–º–∏\n"
    f"<u><b>–¢–æ–≤–∞—Ä—ã</b></u> - –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ç–æ–≤–∞—Ä–∞–º–∏\n"
    f"<u><b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è</b></u> - –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤\n"
    f'<u><b>–ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫</b></u> - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è, –æ—Å—Ç–∞—Ç–∫–∏ –≤ –°–≠–î "–ß–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫"\n'
)
need_registration = (
    "–ù—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –±–æ—Ç–µ.\n"
    f'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"\n'
    f'–ï—Å–ª–∏ –Ω–µ –≤–∏–¥–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", —Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ –ø—Ä–∏–º–µ—Ä.'
)
succes_registration = "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞"
succes_inventory = "‚úÖ–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞‚úÖ\n"
WayBills = (
    f"<u><b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—ã–µ</b></u> - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–µ –ø—Ä–∏–Ω—è—Ç—ã–µ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ.\n"
    f"<u><b>–ü–µ—Ä–µ–≤—ã—Å–ª–∞—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—ã–µ</b></u> - –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–∫–ª–∞–¥–Ω–æ–π –Ω–∞ –∫–∞—Å—Å—É.\n"
    f"<u><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö</b></u> - –í—ã–≤–µ–¥–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–µ—Å—è—Ç–∏ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö.\n"
)
WayBills_blacklist = (
    f"<u><b>–ü–µ—Ä–µ–≤—ã—Å–ª–∞—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—ã–µ</b></u> - –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–∫–ª–∞–¥–Ω–æ–π –Ω–∞ –∫–∞—Å—Å—É.\n"
    f"<u><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö</b></u> - –í—ã–≤–µ–¥–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–µ—Å—è—Ç–∏ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö.\n"
)
resend_ttn = (
    "<b><u>–í—Å–µ –Ω–µ –ø—Ä–∏–Ω—è—Ç—ã–µ –¢–¢–ù</u></b> - –ü–µ—Ä–µ–≤—ã—Å—ã–ª–∞–µ—Ç —Ä–∞–Ω–µ–µ –Ω–µ –ø—Ä–∏–Ω—è—Ç—ã–µ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ\n"
    "<b><u>–í—ã–±—Ä–∞—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –¢–¢–ù</u></b> - –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∏–∑ 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç—É–ø–∞–≤—à–∏—Ö –∫ –≤–∞–º –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö\n"
    "<b><u>–í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –¢–¢–ù –≤ —Ä—É—á–Ω—É—é</u></b> - –í–≤–æ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¢–¢–ù –ï–ì–ê–ò–° –≤ —Ä—É—á–Ω—É—é\n"
)
goods = (
    f"<u><b>–°–≥–µ–Ω–µ—Ä–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —à—Ç—Ä–∏—Ö–∫–æ–¥</b></u> - –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —à—Ç—Ä–∏—Ö–∫–æ–¥\n"
    f"<u><b>–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</b></u> - –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –∫–∞—Å—Å—É\n"
    f"<u><b>–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É</b></u> - –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –∫–∞—Å—Å–µ\n"
)
ostatki = (
    f"<u><b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∏</b></u> - –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏\n"
    f"<u><b>–°–ø–∏—Å–æ–∫ –ø–æ –¥–∞—Ç–∞–º</b></u> - –í—ã–≤–µ–¥–µ–º –¥–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 6 —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤"
)
enter_cash_number = (
    "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞:\n–ù—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: <b><u>902</u></b>"
)
list_ostatki = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –¥–∞—Ç—É –æ—Å—Ç–∞—Ç–∫–æ–≤"
choose_entity = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ —é—Ä.–ª–∏—Ü–æ"
inventory = "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É"
load_information = "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏..."
scan_photo_or_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ —Ç–æ–≤–∞—Ä–Ω—ã–π —à—Ç—Ä–∏—Ö–∫–æ–¥, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é."
scan_datamatrix_photo = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É, –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é."

markirovka_doc_menu = (
    f"<u><b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—ã–µ</b></u> - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–µ –ø—Ä–∏–Ω—è—Ç—ã–µ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ.\n"
    f"<u><b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö</b></u> - –í—ã–≤–µ–¥–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–µ—Å—è—Ç–∏ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö.\n"
)

markirovka_menu = (
    # f'<u><b>–û—Å—Ç–∞—Ç–∫–∏</b></u> - –ü–æ–ª—É—á–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞\n'
    # f'<u><b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è</b></u> - –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤\n'
    f"<u><b>–ù–∞–∫–ª–∞–¥–Ω—ã–µ</b></u> - –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –Ω–∞–∫–ª–∞–¥–Ω—ã–º–∏\n"
    f"<u><b>–†–∞–∑–ª–∏–≤–Ω–æ–µ –ø–∏–≤–æ</b></u> - –ü–æ—Å—Ç–∞–≤–∏—Ç—å –ø–∏–≤–æ –Ω–∞ –∫—Ä–∞–Ω\n"
)

sub_to_tg_channel = (
    f"{intersum_head}"
    f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –≤ –¢–µ–ª–µ–≥—Ä–∞–º: @egais116"
)
fail_to_wait_sub = (
    f"{error_head}"
    f"–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª –∏—Å—Ç–µ–∫–ª–æ.\n\n"
    f"–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @egais116 –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
)


def degustation(degustation: Degustation) -> list[Text]:
    text = as_line("‚ûñ" * 3, Underline(Bold("–î–µ–≥—É—Å—Ç–∞—Ü–∏—è")), "‚ûñ" * 3)
    for i, g in enumerate(degustation.goods):
        text += as_line()


def markirovka_inventory_info(
    inventory: Inventory, only_total_scanned: bool = True
) -> list[Text]:
    result = []
    text = as_line("‚ûñ" * 3, Underline(Bold("–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è")), "‚ûñ" * 3)
    if only_total_scanned:
        text += as_line(
            "–í—Å–µ–≥–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: ",
            Underline(
                Bold(sum([p.gtin_quantity for p in inventory.products_inventory]))
            ),
            " —à—Ç",
        )
        result.append(text)
        return result
    else:
        total_scanned = 0
        for p in inventory.products_inventory:
            text += as_line(p.name, " | ", p.gtin, " | ", p.gtin_quantity, " —à—Ç")
            text += as_line("‚ûñ" * 10)
            total_scanned += p.gtin_quantity
            if len(text) > 3800:
                result.append(text)
                text = Text()
        text += as_line("–í—Å–µ–≥–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: ", Underline(Bold(total_scanned)), " —à—Ç")
        result.append(text)
    return result


async def markirovka_inventory_confirm_info(inventory: InventoryExcel) -> str:
    text = (
        f"{information_head}"
        f"<b>–¢–æ–≤–∞—Ä–Ω–∞—è –≥—Ä—É–ø–ø–∞:</b> <code>{(await get_pg_info(inventory.pg_name)).name}</code>\n"
        f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–ø–∏—Å–∞–Ω–∏–µ:</b> <code>{inventory.count}</code> —à—Ç\n"
        f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π –Ω–∞ —Å–ø–∏—Å–∞–Ω–∏–µ:</b> <code>{inventory.count_positions}</code>\n"
    )
    return text


async def markirovka_inventory_more_info(inventory: InventoryExcel) -> str:
    text = (
        f"{information_head}"
        f"<b>–¢–æ–≤–∞—Ä–Ω–∞—è –≥—Ä—É–ø–ø–∞:</b> <code>{(await get_pg_info(inventory.pg_name)).name}</code>\n"
        f"<b>–û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:</b> <code>{inventory.count}</code> —à—Ç\n"
        f"<b>–û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–∑–∏—Ü–∏–π:</b> <code>{inventory.count_positions}</code>\n"
    )
    return text

    # result = []
    # text = as_line('‚ûñ' * 3, Underline(Bold('–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è')), '‚ûñ' * 3)
    # if only_total_scanned:
    #     text += f'–ë—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω–æ: <b><u>{sum([p.gtin_quantity for p in inventory.products_inventory])}</u></b> —à—Ç'
    # else:
    #     text += as_line(Underline("–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–ø–∏—Å–∞–Ω–∏–µ"))
    #     text += as_line(Bold("–ù–∞–∑–≤–∞–Ω–∏–µ", " | ", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"))
    #     text += as_line("‚ûñ" * 10)
    #     total_scanned = 0
    #     for p_b in inventory.products_balance:
    #         find = False
    #         for p in inventory.products_inventory:
    #             if p_b.gtin == p.gtin:
    #                 current_quantiy = p_b.gtin_quantity - p.gtin_quantity
    #                 if current_quantiy == 0:
    #                     continue
    #                 text += as_line(p_b.name, ' | ',  current_quantiy,  ' —à—Ç')
    #                 text += as_line("‚ûñ" * 10)
    #                 total_scanned += current_quantiy
    #                 find = True
    #                 break
    #         if not find:
    #             text += as_line(p_b.name, ' | ', p_b.gtin_quantity, ' —à—Ç')
    #             text += as_line("‚ûñ" * 10)
    #             total_scanned += p_b.gtin_quantity
    #         if len(text) > 3800:
    #             result.append(text)
    #             text = Text()
    #
    #     text += as_line('–ë—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω–æ: ', Underline(Bold(total_scanned)), ' —à—Ç')
    #     result.append(text)
    # return result


async def profile(cash: ForemanCash) -> Tuple[str, List[str]]:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–∞—Å—Å—ã –∏ —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫.

    :param cash: –û–±—ä–µ–∫—Ç ForemanCash —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞—Å—Å–µ.
    :return: –ö–æ—Ä—Ç–µ–∂ –∏–∑ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –æ—Ç—á—ë—Ç–∞ –∏ —Å–ø–∏—Å–∫–∞ –æ—à–∏–±–æ–∫.
    """
    info_lines = [information_head]
    error_messages = []

    def add_info(message: str):
        info_lines.append(message)

    def add_error(message: str):
        error_messages.append(f"‚ùå{message}")
        info_lines.append(f"‚ùå{message}")  # –í–∫–ª—é—á–∞–µ–º –æ—à–∏–±–∫–∏ –≤ –æ–±—â–∏–π —Ç–µ–∫—Å—Ç

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –∞—Ä—Ç–∏–∫—Å
    try:
        version_patch = int(cash.artix_version.split(".")[2])
        if version_patch >= 253:
            add_info("<b>–í–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>: –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç ‚úÖ\n")
        else:
            add_error("<b>–ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>\n")
    except (IndexError, ValueError):
        add_error("<b>–í–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏\n")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    add_info(f"<b>–ù–æ–º–µ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞:</b> <code>{cash.shopcode}</code>\n")
    add_info(f"<b>–ù–æ–º–µ—Ä –∫–∞—Å—Å—ã:</b> <code>{cash.cashcode}</code>\n")
    add_info(f"<b>–ê–¥—Ä–µ—Å:</b> <code>{cash.address}</code>\n")
    add_info(f"<b>–ò–ù–ù:</b> <code>{cash.inn}</code>\n")

    if cash.kpp:
        add_info(f"<b>–ö–ü–ü:</b> <code>{cash.kpp}</code>\n")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    if cash.xapikey:
        add_info(f"<b>–¢–æ–∫–µ–Ω:</b> <code>{cash.xapikey}</code>\n")
    else:
        if cash.kkm2_number and float(cash.kkm2_ffd_version) == 1.2:
            add_error("<b><u>–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω —Ä–∞–∑—Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞</u></b>Ô∏è\n")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ–∫–æ–≤—ã—Ö –∞–ø–ø–∞—Ä–∞—Ç–æ–≤
    if (cash.kkm1_number and cash.kkm1_fn_number) or (
        cash.kkm2_number and cash.kkm2_fn_number
    ):
        add_info("‚ÑπÔ∏è –ß–µ–∫–æ–≤—ã–µ –∞–ø–ø–∞—Ä–∞—Ç—ã ‚ÑπÔ∏è\n")
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ö–ö–ú1
        if cash.kkm1_number and cash.kkm1_fn_number:
            add_info(f"#1 <b>{cash.kkm1_name}</b>\n")
            add_info(f"‚ûñ <b>–ó–∞–≤–æ–¥—Å–∫–æ–π –Ω–æ–º–µ—Ä</b>: <code>{cash.kkm1_number}</code>\n")
            add_info(f"‚ûñ <b>–ù–æ–º–µ—Ä –§–ù</b>: <code>{cash.kkm1_fn_number}</code>\n")
            add_info(f"‚ûñ <b>–í–µ—Ä—Å–∏—è –§–§–î</b>: <code>{cash.kkm1_ffd_version}</code>\n")
            add_info(f"‚ûñ <b>–í–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏</b>: <code>{cash.kkm1_firmware}</code>\n")
            add_info(f"‚ûñ <b>–ù–î–°</b>: <code>{cash.kkm1_taxmapping}</code>\n")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –§–ù
            try:
                kkm1_fn_date = datetime.strptime(cash.kkm1_fn_date_end, "%d.%m.%Y")
                now = datetime.now()
                if now > kkm1_fn_date:
                    add_error("<b>–í—ã—à–µ–ª —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –§–ù</b>\n")
                elif now - timedelta(days=7) > kkm1_fn_date:
                    add_error("<b>–í—ã—Ö–æ–¥–∏—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –§–ù</b>\n")
                add_info(
                    f"‚ûñ <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –§–ù</b>: <code>{cash.kkm1_fn_date_end}</code>\n"
                )
            except ValueError:
                add_error("<b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –§–ù</b>: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã\n")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–ª—è –ö–ö–ú1
            kkm1_need_update = []
            if cash.os_name == "bionic" and cash.kkm1_name == "–ê–¢–û–õ":
                km_version = cash.kkm1_firmware.split(".")
                try:
                    major = int(km_version[0])
                    minor = int(km_version[1])
                    if major < 5:
                        kkm1_need_update.append(
                            "–ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é –ø—Ä–æ—à–∏–≤–∫–∏ –¥–æ 5-–æ–π –≤–µ—Ä—Å–∏–∏"
                        )
                    if major == 5 and minor < 8:
                        kkm1_need_update.append(
                            "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 5.8"
                        )
                except (IndexError, ValueError):
                    kkm1_need_update.append("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—à–∏–≤–∫–∏")

            # try:
            #     if float(cash.kkm1_ffd_version) < 1.2:
            #         kkm1_need_update.append('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –§–§–î –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 1.2')
            # except ValueError:
            #     kkm1_need_update.append('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏ –§–§–î')

            if kkm1_need_update:
                add_info("  ‚ö†Ô∏è<b><u>–ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å</u></b>‚ö†Ô∏è\n")
                for update_msg in kkm1_need_update:
                    add_error(f"{update_msg}\n")
            else:
                add_info("‚ûñ <b>–°–æ—Å—Ç–æ—è–Ω–∏–µ –§–†</b>: –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç ‚úÖ\n")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ö–ö–ú2
        if cash.kkm2_number and cash.kkm2_fn_number:
            add_info(f"#2 <b>{cash.kkm2_name}</b>\n")
            add_info(f"‚ûñ <b>–ó–∞–≤–æ–¥—Å–∫–æ–π –Ω–æ–º–µ—Ä</b>: <code>{cash.kkm2_number}</code>\n")
            add_info(f"‚ûñ <b>–ù–æ–º–µ—Ä –§–ù</b>: <code>{cash.kkm2_fn_number}</code>\n")
            add_info(f"‚ûñ <b>–í–µ—Ä—Å–∏—è –§–§–î</b>: <code>{cash.kkm2_ffd_version}</code>\n")
            add_info(f"‚ûñ <b>–í–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏</b>: <code>{cash.kkm2_firmware}</code>\n")
            add_info(f"‚ûñ <b>–ù–î–°</b>: <code>{cash.kkm2_taxmapping}</code>\n")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –§–ù
            try:
                kkm2_fn_date = datetime.strptime(cash.kkm2_fn_date_end, "%d.%m.%Y")
                now = datetime.now()
                if now > kkm2_fn_date:
                    add_error("<b>–í—ã—à–µ–ª —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –§–ù</b>\n")
                elif now - timedelta(days=7) > kkm2_fn_date:
                    add_error("<b>–í—ã—Ö–æ–¥–∏—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –§–ù</b>\n")
                add_info(
                    f"‚ûñ <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –§–ù</b>: <code>{cash.kkm2_fn_date_end}</code>\n"
                )
            except ValueError:
                add_error("<b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –§–ù</b>: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã\n")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–ª—è –ö–ö–ú2
            kkm2_need_update = []
            if cash.os_name == "bionic" and cash.kkm2_name == "–ê–¢–û–õ":
                km_version = cash.kkm2_firmware.split(".")
                try:
                    major = int(km_version[0])
                    minor = int(km_version[1])
                    if major < 5:
                        kkm2_need_update.append(
                            "–ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é –ø—Ä–æ—à–∏–≤–∫–∏ –¥–æ 5-–æ–π –≤–µ—Ä—Å–∏–∏"
                        )
                    if major == 5 and minor < 8:
                        kkm2_need_update.append(
                            "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 5.8"
                        )
                except (IndexError, ValueError):
                    kkm2_need_update.append("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—à–∏–≤–∫–∏")

            try:
                if float(cash.kkm2_ffd_version) < 1.2:
                    kkm2_need_update.append(
                        "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –§–§–î –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 1.2"
                    )
            except ValueError:
                kkm2_need_update.append("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏ –§–§–î")

            if kkm2_need_update:
                add_info("  ‚ö†Ô∏è<b><u>–ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å</u></b>‚ö†Ô∏è\n")
                for update_msg in kkm2_need_update:
                    add_error(f"{update_msg}\n")
            else:
                add_info("‚ûñ <b>–°–æ—Å—Ç–æ—è–Ω–∏–µ –§–†</b>: –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç ‚úÖ\n")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –†—É—Ç–æ–∫–µ–Ω–æ–≤
    if (cash.gost1_date_end and cash.pki1_date_end) or (
        cash.gost2_date_end and cash.pki2_date_end
    ):
        add_info("‚ÑπÔ∏è –†—É—Ç–æ–∫–µ–Ω—ã ‚ÑπÔ∏è\n")
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ì–û–°–¢1 –∏ PKI1
        if cash.gost1_date_end:
            add_info(f"#1 <b>{cash.artix_shopname}</b>\n")
            add_info(f"‚ûñ <b>–§–°–†–ê–† ID</b>: <code>{cash.fsrar}</code>\n")
            try:
                gost1_date = datetime.strptime(cash.gost1_date_end, "%Y-%m-%d")
                pki1_date = datetime.strptime(cash.pki1_date_end, "%Y-%m-%d")
                now = datetime.now()
                if now > gost1_date:
                    add_error(
                        f"<b>–í—ã—à–µ–ª —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ì–û–°–¢ –û–û–û –†—É—Ç–æ–∫–µ–Ω–∞ ({gost1_date})</b>\n"
                    )
                elif now - timedelta(days=7) > gost1_date:
                    add_error(
                        f"<b>–í—ã—Ö–æ–¥–∏—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ì–û–°–¢ –û–û–û –†—É—Ç–æ–∫–µ–Ω–∞ ({gost1_date})</b>\n"
                    )
                add_info(
                    f"‚ûñ <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ì–û–°–¢</b>: <code>{cash.gost1_date_end}</code>\n"
                )
            except ValueError:
                add_error("<b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ì–û–°–¢</b>: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã\n")

            try:
                if datetime.now() > pki1_date:
                    add_error(
                        f"<b>–í—ã—à–µ–ª —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è PKI –û–û–û –†—É—Ç–æ–∫–µ–Ω–∞ ({pki1_date})</b>Ô∏è\n"
                    )
                elif datetime.now() - timedelta(days=7) > pki1_date:
                    add_error(
                        "<b>–í—ã—Ö–æ–¥–∏—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è PKI –û–û–û –†—É—Ç–æ–∫–µ–Ω–∞ ({pki1_date})</b>\n"
                    )
                add_info(
                    f"‚ûñ <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è PKI</b>: <code>{cash.pki1_date_end}</code>\n"
                )
            except (NameError, ValueError):
                add_error("<b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è PKI</b>: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã\n")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ì–û–°–¢2 –∏ PKI2
        if cash.gost2_date_end:
            add_info(f"#2 <b>{cash.artix_shopname2}</b>\n")
            add_info(f"‚ûñ <b>–§–°–†–ê–† ID</b>: <code>{cash.fsrar2}</code>\n")
            try:
                gost2_date = datetime.strptime(cash.gost2_date_end, "%Y-%m-%d")
                pki2_date = datetime.strptime(cash.pki2_date_end, "%Y-%m-%d")
                now = datetime.now()
                if now > gost2_date:
                    add_error(
                        f"<b>–í—ã—à–µ–ª —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ì–û–°–¢ –ò–ü –†—É—Ç–æ–∫–µ–Ω–∞ ({gost2_date})</b>\n"
                    )
                elif now - timedelta(days=7) > gost2_date:
                    add_error(
                        f"<b>–í—ã—Ö–æ–¥–∏—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ì–û–°–¢ –ò–ü –†—É—Ç–æ–∫–µ–Ω–∞ ({gost2_date})</b>Ô∏è\n"
                    )
                add_info(
                    f"‚ûñ <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ì–û–°–¢</b>: <code>{cash.gost2_date_end}</code>\n"
                )
            except ValueError:
                add_error("<b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ì–û–°–¢</b>: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã\n")

            try:
                if datetime.now() > pki2_date:
                    add_error(f"<b>–í—ã—à–µ–ª —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è PKI –ò–ü ({pki2_date})</b>\n")
                elif datetime.now() - timedelta(days=7) > pki2_date:
                    add_error(f"<b>–í—ã—Ö–æ–¥–∏—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è PKI –ò–ü ({pki2_date})</b>\n")
                add_info(
                    f"‚ûñ <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è PKI</b>: <code>{cash.pki2_date_end}</code>\n"
                )
            except (NameError, ValueError):
                add_error("<b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è PKI</b>: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã\n")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–∞—Å—Å–∏—Ä–æ–≤
    if len(cash.list_mols) > 0:
        add_info("‚ÑπÔ∏è –ö–∞—Å—Å–∏—Ä—ã ‚ÑπÔ∏è\n")
        if "–ú–∞—Å—Ç–µ—Ä" in cash.list_mols:
            add_error("<b>–í–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–∞—Å—Å–∏—Ä–∞ —Å –µ–≥–æ –§–ò–û</b>\n")
        for mol in [m for m in cash.list_mols if m != "–ú–∞—Å—Ç–µ—Ä"]:
            add_info(f"‚ûñ <b>{mol}</b>\n")
    else:
        add_error("<b>–í–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–∞—Å—Å–∏—Ä–∞ —Å –µ–≥–æ –§–ò–û</b>\n")

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    if len(error_messages) > 0:
        error_text = "‚ö†Ô∏è<b><u>–£ –≤–∞—Å –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è</u></b>‚ö†Ô∏è\n"
        error_text += "".join(error_messages)
        error_text += '\n<blockquote>–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Å—Å–µ"</blockquote>'
    else:
        error_text = ""

    full_text = "".join(info_lines)

    return full_text, error_text


no_sales = f"{error_head}–£ –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø—Ä–æ–¥–∞–∂–∏"
