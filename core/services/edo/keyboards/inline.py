from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from core.services.edo.callback_data import (
    SelectEdoProvider,
    SendAcceptDoc,
    ChoiseAccountLogin,
    DeleteAutoLogin,
    DocForAccept,
    DocForInfo,
    DraftBeerMOD,
)
from core.services.edo.schemas.login.models_delete import DeleteProfiles
from core.services.markirovka.database.model import AutoLoginMarkirovka
from core.services.markirovka.pd_models.gismt import EdoOperator, MODS
from core.utils.edo_providers.base_model import BaseDocument


def select_account_autologin(accounts: AutoLoginMarkirovka):
    kb = InlineKeyboardBuilder()
    for acc in accounts:
        kb.button(text=acc.fio, callback_data=ChoiseAccountLogin(inn=acc.inn))
    kb.adjust(1)
    kb.row(
        InlineKeyboardButton(
            text="–î–æ–±–∞–≤–∏—Ç—å üë§‚ûï", callback_data="markirovka_enter_inn"
        ),
        InlineKeyboardButton(
            text="–£–¥–∞–ª–∏—Ç—å üë§‚ùå", callback_data="markirovka_choice_delete_autologin"
        ),
    )
    return kb.as_markup()


def kb_delete_autologin(del_profiles: DeleteProfiles):
    kb = InlineKeyboardBuilder()
    for p in del_profiles.profiles:
        if p.to_delete:
            kb.button(text=f"‚ùå{p.fio}", callback_data=DeleteAutoLogin(inn=p.inn))
        else:
            kb.button(text=p.fio, callback_data=DeleteAutoLogin(inn=p.inn))
    kb.adjust(1)

    buttons = []
    if any([p.to_delete for p in del_profiles.profiles]):
        buttons.append(
            InlineKeyboardButton(
                text="–£–¥–∞–ª–∏—Ç—å üë§‚ùå", callback_data="markirovka_delete_autologin"
            )
        ),
    buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="markirovka")),
    kb.row(*buttons)

    return kb.as_markup()


def kb_start_markirovka():
    kb = InlineKeyboardBuilder()
    # kb.button(text="–û—Å—Ç–∞—Ç–∫–∏", callback_data='markirovka_ostatki')
    kb.button(text="–ù–∞–∫–ª–∞–¥–Ω—ã–µ", callback_data="markirovka_documents")
    # kb.button(text="–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è", callback_data='markirovka_inventory')
    kb.button(text="–†–∞–∑–ª–∏–≤–Ω–æ–µ –ø–∏–≤–æ", callback_data="draftbeer_menu")
    kb.adjust(2, repeat=True)
    return kb.as_markup()


def kb_markirovka_doc_menu():
    kb = InlineKeyboardBuilder()
    kb.button(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—ã–µ", callback_data="markirovka_ttn_accept")
    kb.button(
        text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö", callback_data="markirovka_ttn_info"
    )
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_select_edo_provider(edoproviders: list[EdoOperator]):
    kb = InlineKeyboardBuilder()
    for edoprovider in edoproviders:
        kb.button(
            text=edoprovider.edo_operator_name,
            callback_data=SelectEdoProvider(id=edoprovider.edo_operator_id),
        )
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_select_doc_for_accept(docs: list[BaseDocument]):
    kb = InlineKeyboardBuilder()
    for doc in docs:
        kb.button(
            text=doc.doc_name,
            callback_data=DocForAccept(
                id=doc.doc_id,
            ),
        )
    kb.button(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—Å–µ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ‚úÖ", callback_data="accept_all_EDO_docs")
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_select_doc_for_info(docs: list[BaseDocument]):
    kb = InlineKeyboardBuilder()
    for doc in docs:
        kb.button(
            text=doc.doc_name,
            callback_data=DocForInfo(
                id=doc.doc_id,
            ),
        )
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_doc_info_for_accept(doc_id):
    kb = InlineKeyboardBuilder()
    kb.button(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—É—é", callback_data=SendAcceptDoc(id=doc_id))
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_back_to_menu():
    kb = InlineKeyboardBuilder()
    kb.button(text=f"‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu_markirovka")
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_ostatki_start_menu():
    kb = InlineKeyboardBuilder()
    kb.button(text="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏", callback_data="ostatki_actual")
    kb.button(text="–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É", callback_data="ostatki_data")
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_scan_inventory(only_close: bool = False):
    kb = InlineKeyboardBuilder()
    if not only_close:
        kb.button(text="–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="chz_inventory_info")
    kb.button(text="–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é", callback_data="chz_inventory_confirm_end")
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_confirm_inventory_end():
    kb = InlineKeyboardBuilder()
    kb.button(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å‚úÖ", callback_data="chz_inventory_end")
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="chz_inventory_info")
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_again_price():
    kb = InlineKeyboardBuilder()
    kb.button(text="–î–∞", callback_data="yes_again_price")
    kb.button(text="–Ω–µ—Ç", callback_data="no_again_price")
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_draftbeer_menu():
    kb = InlineKeyboardBuilder()
    kb.button(text="–ü–æ—Å—Ç–∞–≤–∏—Ç—å –∫–µ–≥—É –Ω–∞ —É—á–µ—Ç", callback_data="draftbeer_add")
    kb.button(text="–û—Å—Ç–∞—Ç–∫–∏ –ø–∏–≤–∞", callback_data="draftbeer_balance")
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_draftbeer_add_mods(mods: MODS):
    kb = InlineKeyboardBuilder()
    for i, mod in enumerate(mods.result, start=1):
        kb.button(
            text=f"{i}. {mod.address}",
            callback_data=DraftBeerMOD(
                fias=mod.fiasId,
                kpp=mod.kpp,
            ),
        )
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_addbcode_load_prepare_commit():
    kb = InlineKeyboardBuilder()
    kb.button(
        text="–°–ø–∏—Å–æ–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ ‚è≥",
        callback_data="send_prepare_commit_addbcode",
    )
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_draftbeer_add_prepare_commit():
    kb = InlineKeyboardBuilder()
    kb.button(text="–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ ‚ûï", callback_data="more_draftbeer_add")
    kb.button(text="–ì–æ—Ç–æ–≤–æ ‚úÖ", callback_data="commit_draftbeer_add")
    kb.adjust(1, repeat=True)
    return kb.as_markup()


def kb_draftbeer_add_load_prepare_commit():
    kb = InlineKeyboardBuilder()
    kb.button(
        text="–°–ø–∏—Å–æ–∫ —Ä–∞–Ω–µ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–µ–≥ ‚è≥", callback_data="send_prepare_commit"
    )
    kb.adjust(1, repeat=True)
    return kb.as_markup()
